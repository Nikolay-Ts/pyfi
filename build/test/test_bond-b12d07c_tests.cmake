add_test( [==[unit.Par bond: coupon == yield -> price == par]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Par bond: coupon == yield -> price == par]==]  )
set_tests_properties( [==[unit.Par bond: coupon == yield -> price == par]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.Premium and discount pricing (semiannual)]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Premium and discount pricing (semiannual)]==]  )
set_tests_properties( [==[unit.Premium and discount pricing (semiannual)]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.Zero yield handled]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Zero yield handled]==]  )
set_tests_properties( [==[unit.Zero yield handled]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.General cash-flow path equals manual discounting]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[General cash-flow path equals manual discounting]==]  )
set_tests_properties( [==[unit.General cash-flow path equals manual discounting]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.Redemption auto-added when flows shorter than tenor]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Redemption auto-added when flows shorter than tenor]==]  )
set_tests_properties( [==[unit.Redemption auto-added when flows shorter than tenor]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.Monotonicity: PV decreases as yield rises]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Monotonicity: PV decreases as yield rises]==]  )
set_tests_properties( [==[unit.Monotonicity: PV decreases as yield rises]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.Invalid inputs throw]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[Invalid inputs throw]==]  )
set_tests_properties( [==[unit.Invalid inputs throw]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.IRR: par bond -> yield equals coupon]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[IRR: par bond -> yield equals coupon]==]  )
set_tests_properties( [==[unit.IRR: par bond -> yield equals coupon]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
add_test( [==[unit.IRR: premium/discount bond]==] /Users/nik/Apps/PyFi/build/test/test_bond [==[IRR: premium/discount bond]==]  )
set_tests_properties( [==[unit.IRR: premium/discount bond]==] PROPERTIES WORKING_DIRECTORY /Users/nik/Apps/PyFi/build/test)
set( test_bond_TESTS [==[unit.Par bond: coupon == yield -> price == par]==] [==[unit.Premium and discount pricing (semiannual)]==] [==[unit.Zero yield handled]==] [==[unit.General cash-flow path equals manual discounting]==] [==[unit.Redemption auto-added when flows shorter than tenor]==] [==[unit.Monotonicity: PV decreases as yield rises]==] [==[unit.Invalid inputs throw]==] [==[unit.IRR: par bond -> yield equals coupon]==] [==[unit.IRR: premium/discount bond]==])
